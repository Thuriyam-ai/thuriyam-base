_templates_suffix: .jinja
_envops:
    block_start_string: "{%"
    block_end_string: "%}"
    variable_start_string: "{{"
    variable_end_string: "}}"

project_name:
    type: str
    help: What is the name of your microservice? (e.g., user-service, payment-service)
    default: thuriyam-users

service_description:
    type: str
    help: Brief description of what this service does
    default: A FastAPI-based microservice

python_module_name:
    type: str
    help: Python module name (snake_case version of project name)
    default: "{{ project_name.replace('-', '_').replace(' ', '_').lower() }}"

entities:
    type: json
    help: List of entity names (e.g., ["user","role","scope"])
    default: ["user","role","scope"]

org_name:
    type: str
    help: Organization name
    default: Thuriyam

version:
    type: str
    help: Initial version
    default: "0.1.0"

author_name:
    type: str
    help: Author name
    default: "{{ org_name }}"

author_email:
    type: str
    help: Author email
    default: "contact@{{ org_name.lower() }}.ai"

use_postgres:
    type: bool
    help: Use PostgreSQL instead of SQLite?
    default: true

database_name:
    type: str
    help: Database name
    default: "{{ python_module_name }}_db"
    when: "{{ use_postgres }}"

database_user:
    type: str
    help: Database user
    default: "{{ org_name | lower }}_user"
    when: "{{ use_postgres }}"

database_password:
    type: str
    help: Database password
    default: "{{ org_name | lower }}_password"
    when: "{{ use_postgres }}"

include_docker:
    type: bool
    help: Include Docker configuration files?
    default: true

include_alembic:
    type: bool
    help: Include Alembic for database migrations?
    default: true

api_prefix:
    type: str
    help: API prefix path
    default: "/api/v1"

jwt_secret_key:
    type: str
    help: JWT secret key for authentication
    default: "your-secret-key-change-in-production"

_tasks:
    - command: "chmod +x scripts/*.sh"
      when: "{{ include_docker }}"
    - command: "chmod +x scripts/*.py"
    - command: "echo 'Microservice {{ project_name }} created successfully!'"
    - command: "echo 'Generated entities: {{ entities }}'"
    - command: "docker compose -f build/docker-compose.yml up -d"
    - command: "echo 'Next steps:\n>> cd {{ project_name }}\n>> uv venv\n>> source .venv/bin/activate\n>> uv sync\n>> uv pip install -e \".[dev]\"'"
    - command: "echo '- Add new database migrations:'"
    - command: "echo '>> docker compose exec -T {{ project_name }} alembic revision --autogenerate -m \"Initial Service Migration\"'"
    - command: "echo '- Run database migrations:'"
    - command: "echo '>> docker compose exec -T {{ project_name }} alembic upgrade head'"
      when: "{{ include_docker }}"
