services:
  {{ project_name }}:
    platform: linux/amd64
    build:
      context: ../app
      dockerfile: DockerfileLocal
    container_name: {{ project_name }}
    restart: always
    ports:
      - "8000:8000" # FastAPI service will be running on port 8000
      - "5678:5678" # Debugpy will be listening for connections, allowing the VSCode debugger to add breakpoints during execution.
    command: bash -c "python3 main.py runserver --host 0.0.0.0 --port 8000 --reload"
    env_file:
      - docker.env
    volumes:
      - "../app:/src"  # Mount local app directory to container for hot reload
    depends_on:
      - postgres
      - redis
      - mongo
      - kafka

  kafka_zookeeper:
    platform: linux/amd64
    image: "bitnami/zookeeper:3.9"
    restart: always
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/bitnami
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    platform: linux/amd64
    image: "bitnami/kafka:3.4"
    restart: always
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=kafka_zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    depends_on:
      - kafka_zookeeper

  statsd:
    platform: linux/amd64
    image: prom/statsd-exporter
    restart: always
    container_name: statsd
    ports:
      - "9102:9102/tcp"
      - "9125:9125/tcp"
      - "9125:9125/udp"
    expose:
      - 9125
      - 9102

  mongo:
    platform: linux/amd64
    image: "mongo:latest"
    restart: always
    environment:
      - MONGODB_ROOT_PASSWORD=admin
      - MONGODB_USERNAME=admin
      - MONGODB_PASSWORD=admin

  redis:
    image: "bitnami/redis"
    environment:
      - "REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL"
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"
    volumes:
      - "redis_data:/var/lib/redis/data"
    restart: always

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: {{ database_user if use_postgres else 'postgres' }}
      POSTGRES_PASSWORD: {{ database_password if use_postgres else 'postgres' }}
      POSTGRES_DB: {{ database_name if use_postgres else python_module_name + '_db' }}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U {{ database_user if use_postgres else 'postgres' }} -d {{ database_name if use_postgres else python_module_name + '_db' }}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
  kafka_data:
  zookeeper_data: 